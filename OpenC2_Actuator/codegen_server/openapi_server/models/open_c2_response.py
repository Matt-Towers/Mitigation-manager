from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.open_c2_command_headers import OpenC2CommandHeaders
from openapi_server.models.open_c2_command_response import OpenC2CommandResponse
from openapi_server import util

from openapi_server.models.open_c2_command_headers import OpenC2CommandHeaders  # noqa: E501
from openapi_server.models.open_c2_command_response import OpenC2CommandResponse  # noqa: E501

class OpenC2Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, headers=None, command_response=None):  # noqa: E501
        """OpenC2Response - a model defined in OpenAPI

        :param headers: The headers of this OpenC2Response.  # noqa: E501
        :type headers: OpenC2CommandHeaders
        :param command_response: The command_response of this OpenC2Response.  # noqa: E501
        :type command_response: OpenC2CommandResponse
        """
        self.openapi_types = {
            'headers': OpenC2CommandHeaders,
            'command_response': OpenC2CommandResponse
        }

        self.attribute_map = {
            'headers': 'headers',
            'command_response': 'command_response'
        }

        self._headers = headers
        self._command_response = command_response

    @classmethod
    def from_dict(cls, dikt) -> 'OpenC2Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OpenC2Response of this OpenC2Response.  # noqa: E501
        :rtype: OpenC2Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def headers(self) -> OpenC2CommandHeaders:
        """Gets the headers of this OpenC2Response.


        :return: The headers of this OpenC2Response.
        :rtype: OpenC2CommandHeaders
        """
        return self._headers

    @headers.setter
    def headers(self, headers: OpenC2CommandHeaders):
        """Sets the headers of this OpenC2Response.


        :param headers: The headers of this OpenC2Response.
        :type headers: OpenC2CommandHeaders
        """
        if headers is None:
            raise ValueError("Invalid value for `headers`, must not be `None`")  # noqa: E501

        self._headers = headers

    @property
    def command_response(self) -> OpenC2CommandResponse:
        """Gets the command_response of this OpenC2Response.


        :return: The command_response of this OpenC2Response.
        :rtype: OpenC2CommandResponse
        """
        return self._command_response

    @command_response.setter
    def command_response(self, command_response: OpenC2CommandResponse):
        """Sets the command_response of this OpenC2Response.


        :param command_response: The command_response of this OpenC2Response.
        :type command_response: OpenC2CommandResponse
        """
        if command_response is None:
            raise ValueError("Invalid value for `command_response`, must not be `None`")  # noqa: E501

        self._command_response = command_response
