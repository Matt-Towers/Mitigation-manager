from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteFileInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actuator_ip=None, file_path=None):  # noqa: E501
        """DeleteFileInfo - a model defined in OpenAPI

        :param actuator_ip: The actuator_ip of this DeleteFileInfo.  # noqa: E501
        :type actuator_ip: str
        :param file_path: The file_path of this DeleteFileInfo.  # noqa: E501
        :type file_path: str
        """
        self.openapi_types = {
            'actuator_ip': str,
            'file_path': str
        }

        self.attribute_map = {
            'actuator_ip': 'actuator_ip',
            'file_path': 'file_path'
        }

        self._actuator_ip = actuator_ip
        self._file_path = file_path

    @classmethod
    def from_dict(cls, dikt) -> 'DeleteFileInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeleteFileInfo of this DeleteFileInfo.  # noqa: E501
        :rtype: DeleteFileInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actuator_ip(self) -> str:
        """Gets the actuator_ip of this DeleteFileInfo.

        IP of OpenC2 Actuator/Consumer of command  # noqa: E501

        :return: The actuator_ip of this DeleteFileInfo.
        :rtype: str
        """
        return self._actuator_ip

    @actuator_ip.setter
    def actuator_ip(self, actuator_ip: str):
        """Sets the actuator_ip of this DeleteFileInfo.

        IP of OpenC2 Actuator/Consumer of command  # noqa: E501

        :param actuator_ip: The actuator_ip of this DeleteFileInfo.
        :type actuator_ip: str
        """
        if actuator_ip is None:
            raise ValueError("Invalid value for `actuator_ip`, must not be `None`")  # noqa: E501

        self._actuator_ip = actuator_ip

    @property
    def file_path(self) -> str:
        """Gets the file_path of this DeleteFileInfo.

        File path of file to be deleted  # noqa: E501

        :return: The file_path of this DeleteFileInfo.
        :rtype: str
        """
        return self._file_path

    @file_path.setter
    def file_path(self, file_path: str):
        """Sets the file_path of this DeleteFileInfo.

        File path of file to be deleted  # noqa: E501

        :param file_path: The file_path of this DeleteFileInfo.
        :type file_path: str
        """
        if file_path is None:
            raise ValueError("Invalid value for `file_path`, must not be `None`")  # noqa: E501

        self._file_path = file_path
